
package Ventanas;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Hashtable;
import javax.swing.ImageIcon;

/**
 *
 * @author yeiso
 */
public class Temperatura extends javax.swing.JPanel {

    Hashtable<Object, ImageIcon> mElementos;

    // Medida de los iconos.
    int width = 32;
    int height = 32;

    //Iconos de la ComboBox
    private final String Fahrenheit = "/IconosTemp/grados-fahrenheit.png";
    private final String Celsius = "/IconosTemp/celsius.png";
    private final String Kelvin = "/IconosTemp/P.png";

    public Temperatura() {
        initComponents();
        mElementos = new Hashtable<>();
        initComboG();
        initComboF();
    }
    // Creando y agregando los elementos a la ComboBox 1

    private void initComboG() {
        jTemperatura1.addItem("Kelvin");
        jTemperatura1.addItem("Celsius");
        jTemperatura1.addItem("Fahrenheit");

        agregarElemento("Kelvin", getIcono(Kelvin));
        agregarElemento("Celsius", getIcono(Celsius));
        agregarElemento("Fahrenheit", getIcono(Fahrenheit));

        jComboBoxG mJComboBoxRender = new jComboBoxG(mElementos);
        jTemperatura1.setRenderer(mJComboBoxRender);
    }

    private void initComboF() {
        jTemperatura2.addItem("Kelvin");
        jTemperatura2.addItem("Celsius");
        jTemperatura2.addItem("Fahrenheit");

        agregarElemento("Kelvin", getIcono(Kelvin));
        agregarElemento("Celsius", getIcono(Celsius));
        agregarElemento("Fahrenheit", getIcono(Fahrenheit));

        jComboBoxF mJComboBoxRender = new jComboBoxF(mElementos);
        jTemperatura2.setRenderer(mJComboBoxRender);
    }

    // Funcion de agregar elementos a la combobox
    public void agregarElemento(String akey, ImageIcon aImageIcon) {
        mElementos.put(akey, aImageIcon);
    }

    // Funcion de los iconos 
    public ImageIcon getIcono(String path) {
        return new ImageIcon(new ImageIcon(getClass().getResource(path)).getImage()
                .getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtitulo3 = new javax.swing.JLabel();
        jtitulo1 = new javax.swing.JLabel();
        jtitulo2 = new javax.swing.JLabel();
        jConvertir = new javax.swing.JButton();
        jResultado = new javax.swing.JTextArea();
        jInvertir = new javax.swing.JButton();
        jTemperatura2 = new javax.swing.JComboBox<>();
        jTemperatura1 = new javax.swing.JComboBox<>();
        jIngreso = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtitulo3.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jtitulo3.setForeground(new java.awt.Color(0, 0, 0));
        jtitulo3.setText("a");
        add(jtitulo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 36, 30, -1));

        jtitulo1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jtitulo1.setForeground(new java.awt.Color(0, 0, 0));
        jtitulo1.setText("Cambio");
        add(jtitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        jtitulo2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jtitulo2.setForeground(new java.awt.Color(0, 0, 0));
        jtitulo2.setText("De: ");
        add(jtitulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        jConvertir.setBackground(new java.awt.Color(225, 217, 47));
        jConvertir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jConvertir.setForeground(new java.awt.Color(0, 0, 0));
        jConvertir.setText("Convertir");
        jConvertir.setBorder(null);
        jConvertir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConvertirActionPerformed(evt);
            }
        });
        add(jConvertir, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 162, 100, 40));

        jResultado.setEditable(false);
        jResultado.setColumns(20);
        jResultado.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jResultado.setRows(5);
        jResultado.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        add(jResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 260, 50));

        jInvertir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cambiar.png"))); // NOI18N
        jInvertir.setBorder(null);
        jInvertir.setContentAreaFilled(false);
        jInvertir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jInvertir.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cambiar.png"))); // NOI18N
        jInvertir.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cambiar_35.png"))); // NOI18N
        jInvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInvertirActionPerformed(evt);
            }
        });
        add(jInvertir, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 64, 40, 30));

        jTemperatura2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTemperatura2.setBorder(null);
        add(jTemperatura2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 110, 40));

        jTemperatura1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTemperatura1.setBorder(null);
        jTemperatura1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTemperatura1ActionPerformed(evt);
            }
        });
        add(jTemperatura1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 110, 40));

        jIngreso.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jIngreso.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jIngreso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jIngresoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jIngresoKeyTyped(evt);
            }
        });
        add(jIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 140, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Blanco.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 5, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jTemperatura1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTemperatura1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTemperatura1ActionPerformed

    // Funcion de el boton convertir

    private void jConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConvertirActionPerformed

        // Definiendo que hacer en cada caso 
        try {
            String ingreso = (String) jTemperatura1.getSelectedItem();
            String salida = (String) jTemperatura2.getSelectedItem();
            double cambio = Double.parseDouble(jIngreso.getText());

            double result = 0;
            
            if (ingreso.equals(salida)) {
               result = iguales(cambio);
            } else {
                if (ingreso.equals("Celsius")) {
                    if (salida.equals("Kelvin")) {
                        result = celsiusAkelvin(cambio);
                    } else {
                        result = celsiusAfahrenheit(cambio);
                    }
                } else if (ingreso.equals("Kelvin")) {
                    if (salida.equals("Celsius")) {
                        result = kelvinAcelsius(cambio);
                    } else {
                        result = kelvinAfahrenheit(cambio);
                    }
                } else {
                    if (salida.equals("Celsius")) {
                        result = fahrenheitAcelsius(cambio);
                    } else {
                        result = fahrenheitAkelvin(cambio);
                    }
                }
            }

            // Impresion del cambio de las operaciones
            jResultado.setText(" " + result + " " + salida);
            // Una exepcion
        } catch (NumberFormatException e) {
            jIngreso.setText(" ");
        }
    }//GEN-LAST:event_jConvertirActionPerformed


    private void jInvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInvertirActionPerformed
        jInvertir.addActionListener((ActionEvent e) -> {
            intercambiarMonedas();
        });
    }//GEN-LAST:event_jInvertirActionPerformed

    // Funcion del boton enter para poder convertir 

    private void jIngresoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jIngresoKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            jConvertir.requestFocus();
            jConvertir.doClick();
        }
    }//GEN-LAST:event_jIngresoKeyPressed

    // Validando para solo recibir numeros
    private void jIngresoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jIngresoKeyTyped
        char[] p = {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'};
        int b = 0;
        for (int i = 0; i <= 10; i++) {
            if (p[i] == evt.getKeyChar()) {
                b = 1;
            }

        }
        if (b == 0) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jIngresoKeyTyped

    // Funcion que intercambia las temperaturas 
    private void intercambiarMonedas() {

        // Intercambiar las monedas seleccionadas en los combo boxes
        String tempOrigen = (String) jTemperatura1.getSelectedItem();
        String tempDestino = (String) jTemperatura2.getSelectedItem();

        jTemperatura1.setSelectedItem(tempDestino);
        jTemperatura2.setSelectedItem(tempOrigen);
    }

    // Definiendo cada caso para las operaciones
    private double celsiusAfahrenheit(double celsius) {
        return (celsius * 9 / 5) + 32;
    }

    private double celsiusAkelvin(double celsius) {
        return celsius + 273.15;
    }

    private double kelvinAfahrenheit(double kelvin) {
        return (kelvin - 273.15) * 9 / 5 + 32;
    }

    private double kelvinAcelsius(double kelvin) {
        return kelvin - 273.15;
    }

    private double fahrenheitAcelsius(double fahrenheit) {
        return (fahrenheit - 32) * 5 / 9;
    }

    private double fahrenheitAkelvin(double fahrenheit) {
        return (fahrenheit - 32) * 5 / 9 + 273.15;
    }
    
    private double iguales (double igual) {
        return igual;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jConvertir;
    private javax.swing.JTextField jIngreso;
    private javax.swing.JButton jInvertir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextArea jResultado;
    private javax.swing.JComboBox<String> jTemperatura1;
    private javax.swing.JComboBox<String> jTemperatura2;
    private javax.swing.JLabel jtitulo1;
    private javax.swing.JLabel jtitulo2;
    private javax.swing.JLabel jtitulo3;
    // End of variables declaration//GEN-END:variables

}
